buildscript {
	ext {
		springBootVersion = '1.3.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

sourceCompatibility = 1.8
targetCompatibility = 1.8

task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'myCompanyJar',  
        	'Implementation-Version': 0.1,
        	'Main-Class': 'com.myCompany.Application'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

//Get dependencies from Maven central repository
repositories {
    mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web:1.3.3.RELEASE')
	testCompile('org.springframework.boot:spring-boot-starter-test')
    	testCompile("junit:junit")
    	compile 'joda-time:joda-time:2.3'
    	compile 'net.sf.flexjson:flexjson:2.0'
    	compile 'org.codehaus.jackson:jackson-core-asl:1.5.0'
    	compile 'org.codehaus.jackson:jackson-mapper-asl:1.5.0'
	compile 'org.springframework.data:spring-data-cassandra:1.3.4.RELEASE'
	

}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
